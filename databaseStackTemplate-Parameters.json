{/*
Below is the CloudFormation stack in creating a DB instance, bastion host, and security groups. Will be deployed
on a specific VPC. Defining the resources using Parameters (such as String, Number, CommaDelimitedList, and 
AWS-Specific parameter) with rules/constraints such as AllowedPatterns (regex), AllowedValues, Hidden value, and constraints. 
We will also use the Function Select function to help get the value from an array/list and Function Sub for defining
tags.

Edited: Added the Metadata: Grouping, Ordering, and Labeling parameters for better visualization. 
*/}
{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "A sample database stack for the AWS CloudFormation step by step course series",
    "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Database Instance Settings"
                    },
                    "Parameters": [
                        "DbClass",
                        "MultiAZ",
                        "AllocatedStorage",
                        "MasterUsername",
                        "MasterUserPassword"
                    ]
                },
                {
                    "Label": {
                        "default": "Network Settings"
                    },
                    "Parameters": [
                        "VpcId",
                        "DbSubnets",
                        "SecurityGroupPorts"
                    ]
                }
            ],
            "ParameterLabels": [
                {
                    "DbClass": {
                        "default": "Database Instance Class"
                    }
                },
                {
                    "AllocatedStorage": {
                        "default": "Allocated Storage Size"
                    }
                }
            ]
        }
    },
    "Parameters": {
        "DbClass": {
            "Type": "String",
            "Description": "The RDS DB instance class",
            "AllowedValues": [
                "db.t4g.micro",
                "db.t3.micro"
            ],
            "Default": "db.t4g.micro"
        },
        "MasterUsername": {
            "Type": "String",
            "Description": "The master username for the DB instance",
            "MaxLength": "10",
            "Default": "dbadmin",
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
            "NoEcho": "true"
        },
        "MasterUserPassword": {
            "Type": "String",
            "Description": "The master user password for the DB instance",
            "MinLength": "8",
            "NoEcho": "true"
        },
        "MultiAZ": {
            "Type": "String",
            "Description": "Enable Multi-AZ on the DB instance?",
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "false"
        },
        "AllocatedStorage": {
            "Type": "Number",
            "Description": "The DB instance storage size in GiB",
            "MinValue": "20",
            "MaxValue": "30",
            "ConstraintDescription": "AllocatedStorage cannot be less than 20 or greater than 30",
            "Default": "20"
        },
        "SecurityGroupPorts": {
            "Type": "List<Number>",
            "Description": "A list of port numbers in the format: <web-server-port>,<database-port>",
            "Default": "3389,3306"
        },
        "DbSubnets": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "Db subnet ids as a list: <subnet1>,<subnet2>,..."
        },
        "VpcId": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "A valid VPC id in your AWS account"
        }
    },
    "Resources": {
        "Bastion": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": "ami-0dfdc165e7af15242",
                "InstanceType": "t2.micro",
                "SubnetId": {
                    "Fn::Select": [
                        0,
                        {
                            "Ref": "DbSubnets"
                        }
                    ]
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${AWS::StackName}-Bastion"
                        }
                    }
                ]
            }
        },
        "WebServerSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VpcId"
                },
                "GroupDescription": "Web server instance security groupd",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "103.5.6.244/32",
                        "FromPort": {
                            "Fn::Select": [
                                0,
                                {
                                    "Ref": "SecurityGroupPorts"
                                }
                            ]
                        },
                        "ToPort": {
                            "Fn::Select": [
                                0,
                                {
                                    "Ref": "SecurityGroupPorts"
                                }
                            ]
                        },
                        "IpProtocol": "tcp"
                    }
                ]
            }
        },
        "DbSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VpcId"
                },
                "GroupDescription": "Database instance security groupd",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "103.5.6.244/32",
                        "FromPort": {
                            "Fn::Select": [
                                1,
                                {
                                    "Ref": "SecurityGroupPorts"
                                }
                            ]
                        },
                        "ToPort": {
                            "Fn::Select": [
                                1,
                                {
                                    "Ref": "SecurityGroupPorts"
                                }
                            ]
                        },
                        "IpProtocol": "tcp"
                    }
                ]
            }
        },
        "DbSubnetGroup": {
            "Type": "AWS::RDS::DBSubnetGroup",
            "Properties": {
                "DBSubnetGroupDescription": "The subnets to launch DB instances",
                "SubnetIds": {
                    "Ref": "DbSubnets"
                }
            }
        },
        "DatabaseInstance": {
            "Type": "AWS::RDS::DBInstance",
            "DeletionPolicy": "Delete",
            "Properties": {
                "AllocatedStorage": {
                    "Ref": "AllocatedStorage"
                },
                "BackupRetentionPeriod": "0",
                "DBInstanceClass": {
                    "Ref": "DbClass"
                },
                "Engine": "mariadb",
                "MasterUsername": {
                    "Ref": "MasterUsername"
                },
                "MasterUserPassword": {
                    "Ref": "MasterUserPassword"
                },
                "MultiAZ": {
                    "Ref": "MultiAZ"
                },
                "PubliclyAccessible": "true",
                "DBSubnetGroupName": {
                    "Ref": "DbSubnetGroup"
                },
                "VPCSecurityGroups": [
                    {
                        "Ref": "DbSecurityGroup"
                    }
                ]
            }
        }
    }
}
